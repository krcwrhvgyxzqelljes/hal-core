
loadrt threads name1=base-thread fp1=0 period1=20000 name2=servo-thread period2=1000000

loadrt state_machine
addf state_machine.update servo-thread

loadrt hal_parport cfg="0xe050 out 0xe030 out"

setp parport.0.reset-time 5000
setp parport.1.reset-time 5000

loadrt stepgen step_type=0,0,0,0,0
addf stepgen.make-pulses base-thread

addf parport.0.read base-thread
addf parport.0.write base-thread
addf parport.0.reset base-thread

addf parport.1.read base-thread
addf parport.1.write base-thread
addf parport.1.reset base-thread

addf stepgen.capture-position servo-thread
addf stepgen.update-freq servo-thread

setp parport.0.pin-17-out 0
setp parport.1.pin-17-out 0  

net x1step           => parport.0.pin-02-out
setp parport.0.pin-02-out-reset 1
#setp parport.0.pin-03-out-invert 1
net x1dir            => parport.0.pin-03-out

net x2step           => parport.0.pin-04-out
setp parport.0.pin-04-out-reset 1
#setp parport.0.pin-05-out-invert 1
net x2dir            => parport.0.pin-05-out

net ystep           => parport.0.pin-06-out
setp parport.0.pin-06-out-reset 1
#To invert motor move
#setp parport.0.pin-07-out-invert 1
net ydir            => parport.0.pin-07-out

net zstep           => parport.0.pin-08-out
setp parport.0.pin-08-out-reset 1
#To invert motor move
#setp parport.0.pin-09-out-invert 1
net zdir            => parport.0.pin-09-out

net astep           => parport.1.pin-14-out
setp parport.0.pin-14-out-reset 1
setp parport.0.pin-16-out-invert 1
net adir            => parport.1.pin-16-out

net both-home-x1     <= parport.1.pin-10-in-not
net both-home-x2     <= parport.1.pin-11-in-not   

# X-AXIS #######################################################
setp stepgen.0.position-scale 187.25
setp stepgen.0.steplen 1
setp stepgen.0.stepspace 0
setp stepgen.0.dirhold 35000
setp stepgen.0.dirsetup 35000
setp stepgen.0.maxaccel 325
setp stepgen.0.enable 1
net x1pos-cmd stepgen.0.position-cmd state_machine.x_axis_0
#net x1pos-fb stepgen.0.position-fb => joint.0.motor-pos-fb
net x1step <= stepgen.0.step
net x1dir <= stepgen.0.dir

setp stepgen.1.position-scale 187.25
setp stepgen.1.steplen 1
setp stepgen.1.stepspace 0
setp stepgen.1.dirhold 35000
setp stepgen.1.dirsetup 35000
setp stepgen.1.maxaccel 325
setp stepgen.1.enable 1
net x2pos-cmd stepgen.1.position-cmd state_machine.x_axis_1
#net x2pos-fb stepgen.1.position-fb => joint.1.motor-pos-fb
net x2step <= stepgen.1.step
net x2dir <= stepgen.1.dir

# Y-AXIS #######################################################
setp stepgen.2.position-scale 187.25
setp stepgen.2.steplen 1
setp stepgen.2.stepspace 0
setp stepgen.2.dirhold 35000
setp stepgen.2.dirsetup 35000
setp stepgen.2.maxaccel 325
setp stepgen.2.enable 1
net ypos-cmd stepgen.2.position-cmd state_machine.y_axis
#net ypos-fb stepgen.2.position-fb => joint.2.motor-pos-fb
net ystep <= stepgen.2.step
net ydir <= stepgen.2.dir

# Z-AXIS #######################################################
setp stepgen.3.position-scale 1250
setp stepgen.3.steplen 1
setp stepgen.3.stepspace 0
setp stepgen.3.dirhold 35000
setp stepgen.3.dirsetup 35000
setp stepgen.3.maxaccel 100
setp stepgen.3.enable 1
net zpos-cmd stepgen.3.position-cmd state_machine.z_axis  
#net zpos-fb stepgen.3.position-fb => joint.3.motor-pos-fb
net zstep <= stepgen.3.step
net zdir <= stepgen.3.dir

# A-AXIS #######################################################
setp stepgen.4.position-scale 1250
setp stepgen.4.steplen 1
setp stepgen.4.stepspace 0
setp stepgen.4.dirhold 35000
setp stepgen.4.dirsetup 35000
setp stepgen.4.maxaccel 75
setp stepgen.4.enable 1
#net apos-cmd joint.4.motor-pos-cmd => stepgen.4.position-cmd  
#net apos-fb stepgen.4.position-fb => joint.4.motor-pos-fb
net astep <= stepgen.4.step
net adir <= stepgen.4.dir

#net estop-out <= iocontrol.0.user-enable-out
#net estop-out => iocontrol.0.emc-enable-in

#net estop-out <= iocontrol.0.user-enable-out
#net estop-ext => iocontrol.0.emc-enable-in

net estop-ext => parport.0.pin-10-in-not
#net estop-ext => parport.0.pin-10-in
